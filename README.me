# Password Cracking Tool

This Python script demonstrates the concepts of password security by attempting to brute force a password and checking if it matches common passwords from a word list. The tool supports both plain text and hashed passwords, making it versatile for educational purposes.

---

## Features

- **Common Password Check**: Compares the target password against a word list of common passwords (`words.txt`).
- **Brute Force Attack**: 
  - Supports plain text passwords.
  - Handles hashed passwords (using SHA-256).
  - Allows dynamic configuration of character sets (letters, digits, symbols) and password length.
- **Length Flexibility**: Accepts a range of lengths for brute-forcing.

---

## Requirements

- **Python**: Version 3.7 or higher.
- **Dependencies**: No external libraries needed.

---

## Installation

1. Clone or download the repository to your local machine.
2. Ensure Python is installed on your system.
3. Place a word list of common passwords in a file named `words.txt` in the same directory as the script.

---

## Usage

1. Run the script:
   ```bash
   python main.py
Follow the prompts:
Specify whether the target password is plain text or hashed.
Enter the minimum and maximum password lengths to test.
Choose whether to include digits and symbols in the character set.
Enter the target password or hash to crack.
Example Run
Input:
plaintext
Copy code
Is your target password plain text or hashed? (plain/hashed): plain
Enter the minimum password length to try: 3
Enter the maximum password length to try: 5
Include digits? (yes/no): yes
Include symbols? (yes/no): no
Enter the plain text password to crack: abc123
Output:
plaintext
Copy code
Password Cracking Tool
Searching...
"abc123" was cracked in 12,345 guesses (length=6)
Time elapsed: 34.56 seconds
File Structure
main.py: The Python script containing the password-cracking logic.
words.txt: A file containing common passwords (one per line) used for the common password check.
Disclaimer
This tool is intended for educational purposes only.

The purpose of this project is to demonstrate the concepts of password security, brute-forcing techniques, and the importance of using strong, secure passwords. By using this tool, you agree to the following:

Authorized Use Only:
This tool should only be used on systems, accounts, or passwords that you own or have explicit permission to test. Unauthorized access or attempts to compromise systems or accounts that you do not own is illegal and unethical.

Compliance with Laws:
Ensure that your use of this tool complies with all applicable laws and regulations in your jurisdiction. Unauthorized password cracking is a violation of privacy and cybersecurity laws.

Responsibility:
The developer(s) of this tool are not responsible for any misuse, damage, or legal consequences that result from improper use of this tool.

Educational Use Only:
The tool is designed to help users understand the vulnerabilities of weak passwords and encourage the adoption of stronger security practices. It should not be used for malicious or unauthorized purposes under any circumstances.

By proceeding, you acknowledge that you have read, understood, and agreed to this disclaimer.

License
This project is open-source and available under the MIT License.

Author
Developed by Ryan Murzyn. Feel free to reach out with questions or suggestions!

markdown
Copy code

---

### What This Includes:
1. **Detailed Features**: Outlines the capabilities of the script.
2. **Requirements and Setup**: Explains prerequisites and installation steps.
3. **Usage Instructions**: Provides a clear example of how to use the tool.
4. **Disclaimer**: Ensures ethical and legal compliance by defining the boundaries of usage.
5. **License**: Assigns the MIT license for open-source usage.

Let me know if youâ€™d like further tweaks! ðŸ˜Š